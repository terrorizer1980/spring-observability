<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>spring-observability-docs</artifactId>
	<name>spring-observability-docs</name>
	<packaging>jar</packaging>
	<description>Spring Observability Docs</description>
	<parent>
		<groupId>org.springframework</groupId>
		<artifactId>spring-observability-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>
	<properties>
		<docs.main>spring-observability</docs.main>
		<main.basedir>${basedir}/..</main.basedir>
		<docs.resources.dir>${project.basedir}/src/main/</docs.resources.dir>
		<upload-docs-zip.phase>deploy</upload-docs-zip.phase>
		<readme.class.path>maven.compile.classpath</readme.class.path>

		<!-- Script -->
		<jackson-databind.version>2.15.0</jackson-databind.version>
		<commons-logging.version>1.2</commons-logging.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>${commons-logging.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson-databind.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.asciidoctor</groupId>
			<artifactId>asciidoctorj</artifactId>
			<version>${asciidoctorj.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter-engine.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main</directory>
				<excludes>
					<exclude>java/**/*.*</exclude>
				</excludes>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>docs</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>${maven-dependency-plugin.version}</version>
						<executions>
							<execution>
								<id>unpack-docs-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>unpack</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>io.spring.docresources</groupId>
											<artifactId>spring-doc-resources</artifactId>
											<version>${spring-doc-resources.version}</version>
											<type>zip</type>
											<overWrite>true</overWrite>
											<outputDirectory>${refdocs.build.directory}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>copy-asciidoc-resources</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.directory}/refdocs/</outputDirectory>
									<resources>
										<resource>
											<directory>src/main/asciidoc</directory>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor-maven-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>io.spring.asciidoctor</groupId>
								<artifactId>spring-asciidoctor-extensions-spring-boot</artifactId>
								<version>${spring-asciidoctor-extensions-boot.version}</version>
							</dependency>
							<dependency>
								<groupId>io.spring.asciidoctor</groupId>
								<artifactId>spring-asciidoctor-extensions-block-switch</artifactId>
								<version>${spring-asciidoctor-extensions-block.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj-pdf.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-diagram</artifactId>
								<version>${asciidoctorj-diagram.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>${refdocs.build.directory}</sourceDirectory>
							<resources>
								<resource>
									<directory>${refdocs.build.directory}</directory>
									<excludes>
										<exclude>**/*.*adoc</exclude>
									</excludes>
								</resource>
							</resources>
							<!-- tag::attributes[] -->
							<attributes>
								<docinfo>shared</docinfo>
								<allow-uri-read>true</allow-uri-read>
								<nofooter/>
								<toc>left</toc>
								<toc-levels>4</toc-levels>
								<sectlinks>true</sectlinks>
								<sources-root>${project.basedir}/src@</sources-root>
								<asciidoc-sources-root>${project.basedir}/src/main/asciidoc@</asciidoc-sources-root>
								<generated-resources-root>${project.basedir}/target/generated-resources@
								</generated-resources-root>
								<!-- Use this attribute the reference code from another module -->
								<!-- Note the @ at the end, lowering the precedence of the attribute -->
								<project-root>${maven.multiModuleProjectDirectory}@</project-root>
								<!-- It's mandatory for you to pass the docs.main property -->
								<github-repo>${docs.main}@</github-repo>
								<github-project>https://github.com/spring-projects/${docs.main}@</github-project>
								<github-raw>
									https://raw.githubusercontent.com/spring-projects/${docs.main}/${github-tag}@
								</github-raw>
								<github-code>https://github.com/spring-projects/${docs.main}/tree/${github-tag}@
								</github-code>
								<github-issues>https://github.com/spring-projects/${docs.main}/issues/@</github-issues>
								<github-wiki>https://github.com/spring-projects/${docs.main}/wiki@</github-wiki>
								<github-master-code>https://github.com/spring-projects/${docs.main}/tree/master@
								</github-master-code>
								<index-link>${index-link}@</index-link>

								<project-version>${project.version}@</project-version>
								<github-tag>${github-tag}@</github-tag>
								<version-type>${version-type}@</version-type>
								<docs-url>https://docs.spring.io/${docs.main}/docs/${project.version}@</docs-url>
								<raw-docs-url>${github-raw}@</raw-docs-url>
								<project-version>${project.version}@</project-version>
								<project-name>${docs.main}@</project-name>
							</attributes>
							<!-- end::attributes[] -->
							<requires>
								<require>asciidoctor-diagram</require>
							</requires>
						</configuration>
						<executions>
							<execution>
								<id>generate-html-documentation</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<sourceDocumentExtensions>
										<sourceDocumentExtension>.adoc</sourceDocumentExtension>
										<sourceDocumentExtension>.htmladoc</sourceDocumentExtension>
									</sourceDocumentExtensions>
									<outputDirectory>${generated-docs-multipage-output.dir}
									</outputDirectory>
									<doctype>book</doctype>
									<attributes>
										<docinfo>shared</docinfo>
										<stylesdir>css/</stylesdir>
										<stylesheet>spring.css</stylesheet>
										<linkcss>true</linkcss>
										<icons>font</icons>
										<highlightjsdir>js/highlight</highlightjsdir>
										<highlightjs-theme>github</highlightjs-theme>
										<imagesdir>./images</imagesdir>
										<attribute-missing>warn</attribute-missing>
										<sourceHighlighter>highlight.js</sourceHighlighter>
									</attributes>
									<logHandler>
										<outputToConsole>true</outputToConsole>
										<failIf>
											<!--												<severity>DEBUG</severity>-->
										</failIf>
									</logHandler>
								</configuration>
							</execution>
							<execution>
								<id>generate-htmlsingle-documentation</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<sourceDocumentExtensions>
										<sourceDocumentExtension>.htmlsingleadoc</sourceDocumentExtension>
									</sourceDocumentExtensions>
									<outputDirectory>
										${generated-docs-singlepage-output.dir}
									</outputDirectory>
									<sourceHighlighter>highlight.js</sourceHighlighter>
									<doctype>book</doctype>
									<attributes>
										<docinfo>shared</docinfo>
										<stylesdir>css/</stylesdir>
										<stylesheet>spring.css</stylesheet>
										<linkcss>true</linkcss>
										<icons>font</icons>
										<highlightjsdir>js/highlight</highlightjsdir>
										<highlightjs-theme>github</highlightjs-theme>
										<imagesdir>./images</imagesdir>
									</attributes>
								</configuration>
							</execution>
							<execution>
								<id>generate-pdf-documentation</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>pdf</backend>
									<sourceDocumentExtensions>
										<sourceDocumentExtension>.pdfadoc</sourceDocumentExtension>
									</sourceDocumentExtensions>
									<outputDirectory>${generated-docs-pdf-output.dir}
									</outputDirectory>
									<resources>
										<resource>
											<directory>${refdocs.build.directory}</directory>
											<excludes>
												<exclude>**/*</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>${maven-antrun-plugin.version}</version>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>${ant-nodeps.version}</version>
							</dependency>
							<dependency>
								<groupId>org.tigris.antelope</groupId>
								<artifactId>antelopetasks</artifactId>
								<version>${antelopetasks.version}</version>
							</dependency>
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${jruby-complete.version}</version>
							</dependency>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${asciidoctorj.version}</version>
							</dependency>
						</dependencies>
						<executions>
							<execution>
								<id>readme</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<path id="readme.class.path">
											<pathelement location="${readme.main.classpath}"/>
										</path>
										<java classname="org.springframework.observability.internal.asciidoctor.ReadmeMain" failonerror="yes" classpathref="${readme.class.path}">
											<!-- Input -->
											<arg value="${project.basedir}/src/main/asciidoc/README.adoc"/>
											<!-- Output -->
											<arg value="${main.basedir}/README.adoc"/>
										</java>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>assert-no-unresolved-links</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<fileset id="unresolved.file" dir="${basedir}/target/generated-docs/" includes="**/*.html">
											<contains text="Unresolved"/>
										</fileset>
										<fail message="[Unresolved] Found...failing">
											<condition>
												<resourcecount when="greater" count="0" refid="unresolved.file"/>
											</condition>
										</fail>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>package-and-attach-docs-zip</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<zip destfile="${project.build.directory}/${project.artifactId}-${revision}.zip">
											<fileset dir="${project.build.directory}/generated-docs"/>
										</zip>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>setup-maven-properties</id>
								<phase>initialize</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<exportAntProperties>true</exportAntProperties>
									<target>
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"/>
										<taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask"/>
										<var name="version-type" value="${revision}"/>
										<propertyregex property="version-type" override="true" input="${version-type}" regexp=".*\.(.*)" replace="\1"/>
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="(M)\d+" replace="MILESTONE"/>
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="(RC)\d+" replace="MILESTONE"/>
										<propertyregex property="version-type" override="true" input="${version-type}" regexp="BUILD-(.*)" replace="SNAPSHOT"/>
										<stringutil string="${version-type}" property="spring-cloud-repo">
											<lowercase/>
										</stringutil>
										<propertyregex property="git.branch" override="true" input="${git.branch}" regexp="origin/(.*)" replace="\1"/>
										<var name="github-tag" value="${git.branch}"/>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-deploy-plugin</artifactId>
						<version>${maven-deploy-plugin.version}</version>
						<executions>
							<execution>
								<id>upload-docs-zip</id>
								<phase>${upload-docs-zip.phase}</phase>
								<goals>
									<goal>deploy-file</goal>
								</goals>
								<configuration>
									<generatePom>false</generatePom>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<repositoryId>${maven-deploy-plugin.deployZipRepositoryId}</repositoryId>
									<url>${maven-deploy-plugin.deployZipUrl}</url>
									<file>${project.build.directory}/${project.artifactId}-${project.version}.zip</file>
									<packaging>zip;zip.type=docs;zip.deployed=false;</packaging>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
